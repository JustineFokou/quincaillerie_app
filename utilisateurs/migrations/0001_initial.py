# Generated by Django 5.2.7 on 2025-10-19 12:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrateur"),
                            ("GERANT", "Gérant"),
                            ("VENDEUR", "Vendeur"),
                            ("STOCKISTE", "Stockiste"),
                        ],
                        default="VENDEUR",
                        help_text="Rôle de l'utilisateur dans le système",
                        max_length=20,
                        verbose_name="Rôle",
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True,
                        help_text="Numéro de téléphone",
                        max_length=20,
                        null=True,
                        verbose_name="Téléphone",
                    ),
                ),
                (
                    "adresse",
                    models.TextField(
                        blank=True,
                        help_text="Adresse de l'utilisateur",
                        null=True,
                        verbose_name="Adresse",
                    ),
                ),
                (
                    "date_embauche",
                    models.DateField(
                        blank=True,
                        help_text="Date d'embauche",
                        null=True,
                        verbose_name="Date d'embauche",
                    ),
                ),
                (
                    "salaire",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Salaire mensuel",
                        max_digits=10,
                        null=True,
                        verbose_name="Salaire",
                    ),
                ),
                (
                    "is_active_employee",
                    models.BooleanField(
                        default=True,
                        help_text="Indique si l'employé est actif",
                        verbose_name="Employé actif",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur",
                "verbose_name_plural": "Utilisateurs",
                "ordering": ["last_name", "first_name"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ProfilUtilisateur",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date et heure de création de l'enregistrement",
                        verbose_name="Date de création",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date et heure de dernière modification",
                        verbose_name="Date de modification",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indique si l'enregistrement est actif",
                        verbose_name="Actif",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Photo de profil",
                        null=True,
                        upload_to="avatars/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Description personnelle",
                        null=True,
                        verbose_name="Biographie",
                    ),
                ),
                (
                    "preferences_notifications",
                    models.JSONField(
                        default=dict,
                        help_text="Préférences de notification",
                        verbose_name="Préférences notifications",
                    ),
                ),
                (
                    "theme_preference",
                    models.CharField(
                        choices=[
                            ("light", "Clair"),
                            ("dark", "Sombre"),
                            ("auto", "Automatique"),
                        ],
                        default="light",
                        help_text="Thème d'interface préféré",
                        max_length=20,
                        verbose_name="Thème préféré",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Utilisateur associé",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profil",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil utilisateur",
                "verbose_name_plural": "Profils utilisateurs",
            },
        ),
    ]
